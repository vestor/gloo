syntax = "proto3";

package retries.options.gloo.solo.io;

option go_package = "github.com/solo-io/gloo/projects/gloo/pkg/api/v1/options/retries";

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "extproto/ext.proto";
option (extproto.equal_all) = true;
option (extproto.hash_all) = true;
option (extproto.clone_all) = true;

import "validate/validate.proto";


// Retry Policy applied at the Route and/or Virtual Hosts levels.
message RetryPolicy {
    // Specifies the conditions under which retry takes place. These are the same
    // conditions [documented for Envoy](https://www.envoyproxy.io/docs/envoy/v1.14.1/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-retry-on)
    string retry_on = 1;

    // Specifies the allowed number of retries. This parameter is optional and
    // defaults to 1. These are the same conditions [documented for Envoy](https://www.envoyproxy.io/docs/envoy/v1.14.1/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-retry-on)
    uint32 num_retries = 2;

    // Specifies a non-zero upstream timeout per retry attempt. This parameter is optional.
    google.protobuf.Duration per_try_timeout = 3;


    // The maximum number of times host selection will be reattempted before giving up, at which
    // point the host that was last selected will be routed to. If unspecified, this will default to
    // retrying once.
    uint64 host_selection_retry_max_attempts = 4;

    string retry_host_predicate_name = 5;
}
